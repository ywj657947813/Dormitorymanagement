package Model;

import java.util.Collection;
import java.util.LinkedHashMap;
import java.util.Map;

/**
 * 购物车对象
 * 
 * 
 */
public class Cart {

	// 购物车属性
	// 购物项集合:Map的key就是商品pid,value:购物项 LinkedHashMap有序的 HashMap是无序的
	private Map<String, CartItem> map = new LinkedHashMap<String, CartItem>();

	// Cart对象中有一个叫cartItems属性.
	public Collection<CartItem> getCartItems() {
		// Map方便移除商品，但在页面便利信息麻烦，所以单独取出value的值（购物项）组成一个集合Collection
		return map.values();
	}

	// 购物总计:
	private double total;

	public double getTotal() {
		return total;
	}

	// 购物车的功能:
	// 1.将购物项添加到购物车
	public void addCart(CartItem cartItem, String dormid) {
		// 判断购物车中是否已经存在该购物项:
		/*
		 * * 如果存在: * 数量增加 * 总计 = 总计 + 购物项小计 * 如果不存在: * 向map中添加购物项 * 总计 = 总计 +
		 * 购物项小计
		 */
		// 获得该物品信息记录的id.（区分宿舍楼）
		String id = cartItem.getId();

		// 判断购物车中是否已经存在该购物项:
		if (map.containsKey(id)) {
			// 存在
			CartItem _cartItem = map.get(id);// 获得购物车中原来的购物项
			if (_cartItem.getDormid().equals(dormid)) {
				// 如果该物品用于同一个宿舍楼，则在已存在的物品数量上增加
				_cartItem.setCount(_cartItem.getCount() + cartItem.getCount());
			} else {
				// 如果不是用于同一个宿舍，则新增一条物品项
				map.put(id, cartItem);
			}
		} else {
			// 不存在，则新增一条物品项
			map.put(id, cartItem);
		}
		// 设置总计的值
		total += cartItem.getSubtotal();
	}

	// 2.从购物车移除购物项
	public void removeCart(String deleteid) {
		// 将购物项移除购物车: 返回的是被移除购物项的对象
		CartItem cartItem = map.remove(deleteid);
		// 总计 = 总计 -移除的购物项小计:
		total -= cartItem.getSubtotal();
	}

	// 3.清空购物车
	public void clearCart() {
		// 将所有购物项清空
		map.clear();
		// 将总计设置为0
		total = 0;
	}
}
